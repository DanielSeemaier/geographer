CC=mpicxx

SRCS=$(wildcard *.cpp)
OBJ_COMMON= ParcoRepart.o MultiLevel.o LocalRefinement.o HilbertCurve.o MeshGenerator.o FileIO.o PrioQueueForInts.o SpectralPartition.o Diffusion.o GraphUtils.o MultiSection.o KMeans.o
OBJ_GOOGLETEST= $(OBJ_COMMON) test_main.o ParcoRepartTest.o MultiLevelTest.o LocalRefinementTest.o HilbertCurveTest.o FileIOTest.o MeshGeneratorTest.o quadtree/test/QuadTreeTest.o auxTest.o SpectralPartitionTest.o DiffusionTest.o KMeansTest.o
OBJ_TEST_MAIN= $(OBJ_COMMON) main.o
OBJ_GRAPH_GEN=  $(OBJ_COMMON) graphGeneratorFromQuad.o
OBJ_CONVERTER = quadTreeConverter.o FileIO.o
OBJ_DIFFUSIONCOORDS = FileIO.o Diffusion.o diffusionCoords.o
OBJ_TEST_INITIAL= $(OBJ_COMMON) testInitial.o 
OBJ_WEAKSCALING= $(OBJ_COMMON) testWeakScaling.o 
OBJ_XTRAPULP = FileIO.o GraphUtils.o xtrapulpWrapper.cpp MeshGenerator.o

EXECUTABLE_GOOGLETEST=KatanomiTest
EXECUTABLE_MAIN=Katanomi
EXECUTABLE_GRAPH_GEN= graphGen
EXECUTABLE_CONVERTER= converter
EXECUTABLE_DIFFUSIONCOORDS=diffCoords
EXECUTABLE_INITIAL= initTest
EXECUTABLE_WEAKSCALING= weakScaling

GIT_COMMIT=$(shell git rev-parse --short HEAD)
SCAI_INCLUDE=
SCAI_LIB=
GTEST_INCLUDE=
GTEST_LIB=
BOOST_LIB=
QUICKSORT_INCLUDE=schizoQuicksort/src
QUICKSORT_LIB=schizoQuicksort/build
MPI_INCLUDE=/usr/lib/openmpi/include/
MPI_LIB=/usr/lib/openmpi/lib/
RBC_DIR=./RBC




LFLAGS= -Wl,-rpath=$(SCAI_LIB) -L$(SCAI_LIB) -L$(GTEST_LIB) -L$(RBC_DIR)/build/lib -L$(MPI_LIB) -lscai_lama -lscai_dmemo -lscai_common -lscai_hmemo -lscai_utilskernel -lscai_tracing -lscai_sparsekernel -lscai_solver -lboost_program_options -lboost_filesystem -lboost_system -lquicksort -lparmetis -lmetis

CCFLAGS= --openmp --std=c++11 -g -I$(SCAI_INCLUDE) -I$(GTEST_INCLUDE) -I$(RCB_DIR)/Sort -I$(QUICKSORT_INCLUDE) -I$(MPI_INCLUDE) -DSCAI_TRACE_ON  -DSCAI_ASSERT_LEVEL_ERROR -DSCAI_LOG_LEVEL_ERROR -DBUILD_COMMIT=$(GIT_COMMIT)

all: main tests metisWrapper lib converter diffusionCoords graphGen testInitial weakScaling
.PHONY: all

tests: $(OBJ_GOOGLETEST)
	$(CC) $(CCFLAGS) $(OBJ_GOOGLETEST) -o $(EXECUTABLE_GOOGLETEST) $(LFLAGS) -lgtest

main: $(OBJ_TEST_MAIN)
	$(CC) $(CCFLAGS) $(OBJ_TEST_MAIN) -o $(EXECUTABLE_MAIN) $(LFLAGS)

testInitial: $(OBJ_TEST_INITIAL)
	$(CC) $(CCFLAGS) $(OBJ_TEST_INITIAL) -o $(EXECUTABLE_INITIAL) $(LFLAGS)

testSpMV: $(OBJ_COMMON) testSpMV.o
	$(CC) $(CCFLAGS) $(OBJ_COMMON) testSpMV.o -o testSpMV $(LFLAGS)
	
###### wrappers	

# parmetis
PARMETIS_LIB= 
OBJ_PARMETIS = FileIO.o GraphUtils.o MeshGenerator.o Wrappers.o
PARMETIS_INCLUDE= -I../metis/include -I../parmetis/include
EXECUTABLE_PARMETIS= parMetis

parMetisPart.o: $(OBJ_PARMETIS)
	$(CC) $(CCFLAGS) $(PARMETIS_INCLUDE)  -c -o parMetisPart.o parMetisPart.cpp

parMetisWrapper:$(OBJ_COMMON) parMetisPart.o
	$(CC) $(CCFLAGS) $(PARMETIS_INCLUDE) $(OBJ_PARMETIS) parMetisPart.o -o $(EXECUTABLE_PARMETIS)  $(LFLAGS) -L../parmetis/lib -lparmetis -L../metis/lib

# xtrapulp
XTRAPULP_INCLUDE= /usr/xtrapulp
XTRAPULP_LIB= /usr/xtrapulp

xtrapulpWrapper: $(OBJ_XTRAPULP) Wrappers.o
	$(CC)  $(CCFLAGS) $(OBJ_XTRAPULP)  -o xtrapulpEXE -L$(XTRAPULP_LIB) -lxtrapulp $(LFLAGS)

# zoltan
ZOLTAN_MAKEFILE_EXPORT=$(HOME)/Code/Trilinos/build/packages/zoltan2/Makefile.export.Zoltan2
include $(ZOLTAN_MAKEFILE_EXPORT)

zoltanRcb.o: zoltanRcb.cpp Wrappers.cpp
	$(CC) $(CCFLAGS) $(ZOLTAN2_ALL_INCLUDE_DIRS) -I$(TRILINOS_INCLUDE) $(OBJ_COMMON) -c -o zoltanRcb.o zoltanRcb.cpp
	
zoltanWrapper: $(OBJ_ZOLTAN2) zoltanRcb.o Wrappers.o
	$(CC) $(CCFLAGS) $(Zoltan2_INCLUDE_DIRS) $(OBJ_COMMON) zoltanRcb.o -o zoltanRcbEXE  $(Zoltan2_LIBRARY_DIRS) $(Zoltan2_LIBRARIES) $(LFLAGS)

	
###### for all wrappers	
Wrappers.o: Wrappers.cpp
	$(CC) $(CCFLAGS) $(PARMETIS_INCLUDE) $(ZOLTAN2_ALL_INCLUDE_DIRS) $(XTRAPULP_INCLUDE) -c -o Wrappers.o Wrappers.cpp

	
###### misc	
	
graphGen: $(OBJ_GRAPH_GEN)
	$(CC) $(CCFLAGS) $(OBJ_GRAPH_GEN) -o $(EXECUTABLE_GRAPH_GEN) $(LFLAGS)

converter: $(OBJ_CONVERTER)
	$(CC) $(CCFLAGS) $(OBJ_CONVERTER) -o $(EXECUTABLE_CONVERTER) $(LFLAGS)

diffusionCoords: $(OBJ_DIFFUSIONCOORDS)
	$(CC) $(CCFLAGS) $(OBJ_DIFFUSIONCOORDS) -o $(EXECUTABLE_DIFFUSIONCOORDS) $(LFLAGS)
	
weakScaling: $(OBJ_WEAKSCALING)
	$(CC) $(CCFLAGS) $(OBJ_WEAKSCALING) -o $(EXECUTABLE_WEAKSCALING) $(LFLAGS)	
	
getMetrics: FileIO.o GraphUtils.o
	$(CC) $(CCFLAGS) getMetrics.cpp FileIO.o GraphUtils.o -o getMetrics $(LFLAGS)

offConverter: FileIO.o	
	$(CC) $(CCFLAGS) off2metis.cpp FileIO.o GraphUtils.o -o off2metis $(LFLAGS)
	

lib: $(OBJ_COMMON)
	ar rcs libparcorepart.a $(OBJ_COMMON)

		
.PHONY: clean
clean:
	rm -f $(EXECUTABLE_MAIN) $(EXECUTABLE_GOOGLETEST) $(EXECUTABLE_GRAPH_GEN) $(OBJ_GOOGLETEST) $(OBJ_TEST_MAIN) $(OBJ_GRAPH_GEN)

%.o: %.cpp
	$(CC) $(CCFLAGS) -c -o $@ $<

depend: .depend

.depend: $(SRCS)
	rm -f ./.depend
	$(CC) $(CCFLAGS) -MM $^ > ./.depend;

include .depend
