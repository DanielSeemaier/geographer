CC=g++

SRCS=$(wildcard *.cpp)
OBJ_GOOGLETEST= test_main.o ParcoRepartTest.o ParcoRepart.o MultiLevelTest.o MultiLevel.o LocalRefinementTest.o LocalRefinement.o HilbertCurve.o HilbertCurveTest.o MeshGenerator.o FileIO.o FileIOTest.o PrioQueueForInts.o quadtree/test/QuadTreeTest.o SpectralPartition.o SpectralPartitionTest.o MultiSection.o MultiSectionTest.o auxTest.o
OBJ_TEST_MAIN= mainTest.o ParcoRepart.o MultiLevel.o LocalRefinement.o HilbertCurve.o MeshGenerator.o MultiSection.o FileIO.o PrioQueueForInts.o
OBJ_GRAPH_GEN=  ParcoRepart.o HilbertCurve.o MeshGenerator.o FileIO.o graphGeneratorFromQuad.o
OBJ_TEST_INITIAL_SFC= testInitialSfc.o ParcoRepart.o MultiLevel.o LocalRefinement.o HilbertCurve.o SpectralPartition.o MultiSection.o MeshGenerator.o FileIO.o PrioQueueForInts.o
OBJ_TEST_INITIAL_MS= testInitialMultiSection.o ParcoRepart.o MultiLevel.o LocalRefinement.o HilbertCurve.o SpectralPartition.o MultiSection.o MeshGenerator.o FileIO.o PrioQueueForInts.o

EXECUTABLE_GOOGLETEST=KatanomiTest
EXECUTABLE_MAIN=Katanomi
EXECUTABLE_GRAPH_GEN= graphGen
EXECUTABLE_INITIAL_SFC= initTestSfc
EXECUTABLE_INITIAL_MS= initTestMS

GIT_COMMIT=$(shell git rev-parse --short HEAD)
SCAI_INCLUDE=
SCAI_LIB=
GTEST_INCLUDE=
GTEST_LIB=
BOOST_LIB=
QUICKSORT_INCLUDE=schizoQuicksort/src
QUICKSORT_LIB=schizoQuicksort/build
LFLAGS= -L$(SCAI_LIB) -L$(GTEST_LIB) -L$(BOOST_LIB) -L$(QUICKSORT_LIB) -lscai_lama -lscai_dmemo -lscai_common -lscai_hmemo -lscai_utilskernel -lscai_tracing -lscai_sparsekernel -lscai_solver -lgtest -lboost_program_options -lboost_filesystem -lboost_system -lquicksort
CCFLAGS= --openmp --std=c++11 -g -I$(SCAI_INCLUDE) -I$(GTEST_INCLUDE) -I$(QUICKSORT_INCLUDE) -DSCAI_TRACE_ON  -DSCAI_ASSERT_LEVEL_ERROR -DSCAI_LOG_LEVEL_ERROR -DBUILD_COMMIT=$(GIT_COMMIT)

all: main tests testInitialMS testInitialSfc
.PHONY: all

tests: $(OBJ_GOOGLETEST)
	$(CC) $(CCFLAGS) $(OBJ_GOOGLETEST) -o $(EXECUTABLE_GOOGLETEST) $(LFLAGS)

main: $(OBJ_TEST_MAIN)
	$(CC) $(CCFLAGS) $(OBJ_TEST_MAIN) -o $(EXECUTABLE_MAIN) $(LFLAGS)
	
graphGen: $(OBJ_GRAPH_GEN)
	$(CC) $(CCFLAGS) $(OBJ_GRAPH_GEN) -o $(EXECUTABLE_GRAPH_GEN) $(LFLAGS)

testInitialSfc: $(OBJ_TEST_INITIAL_SFC)
	$(CC) $(CCFLAGS) $(OBJ_TEST_INITIAL_SFC) -o $(EXECUTABLE_INITIAL_SFC) $(LFLAGS)

testInitialMS: $(OBJ_TEST_INITIAL_MS)
	$(CC) $(CCFLAGS) $(OBJ_TEST_INITIAL_MS) -o $(EXECUTABLE_INITIAL_MS) $(LFLAGS)	
		
.PHONY: clean
clean:
	rm -f $(EXECUTABLE_MAIN) $(EXECUTABLE_GOOGLETEST) $(EXECUTABLE_GRAPH_GEN) $(OBJ_GOOGLETEST) $(OBJ_TEST_MAIN) $(OBJ_GRAPH_GEN)

%.o: %.cpp
	$(CC) $(CCFLAGS) -c -o $@ $<

depend: .depend

.depend: $(SRCS)
	rm -f ./.depend
	$(CC) $(CCFLAGS) -MM $^ > ./.depend;

include .depend